Prueba t√©cnica: Formulario de contacto
üéØ Requisitos funcionales:
Campos obligatorios:

Nombre (name)

Email (email)

Mensaje (message)

Validaciones:

Todos los campos requeridos

Email v√°lido

Mensaje m√≠nimo 10 caracteres

Mostrar errores en tiempo real

Al enviar:

Mostrar mensaje de √©xito

Limpiar el formulario

üí° Tecnolog√≠as a usar:
React + TypeScript

useState para control de campos

Validaci√≥n manual o con una librer√≠a (Zod, Yup, React Hook Form)

Estilos con Tailwind o CSS

ESLint y Prettier

‚úÖ Qu√© pod√©s incluir para que sea m√°s profesional:
√çtem	Para qu√© sirve
React Hook Form	Manejo simple de formularios, mejor performance
Zod o Yup	Validaciones declarativas, seguras y tipadas
Tipado con interface	Mejor control sobre props y tipos del formulario
Feedback visual	Bordes rojos, mensajes de error, aria-invalid para accesibilidad
Estados: loading y success	Mostrar spinner o mensaje mientras se env√≠a el formulario
Simular env√≠o a backend	Usar setTimeout para imitar un fetch/post
Testing con Vitest o RTL	Validar que los errores y env√≠os funcionen correctamente
Deploy en Vercel/Netlify	Mostrarlo online y sumarlo al portfolio